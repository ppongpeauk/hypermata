{
    "openapi": "3.0.1",
    "info": {
        "title": "Train Positions",
        "description": "Real-time train positions and support methods.",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://api.wmata.com/TrainPositions"
        },
        {
            "url": "https://api.wmata.com/TrainPositions"
        }
    ],
    "paths": {
        "/TrainPositions": {
            "get": {
                "summary": "Live Train Positions",
                "description": "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns uniquely identifiable trains in service and what track circuits they currently occupy. Will return an empty set of results when no positions are available.</p>\n\n<p>Data is refreshed once every 7-10 seconds.</p>\n<p>Please refer to <a href=\"/trainpositionsfaq\">this page</a> for additional details.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>TrainPositions</td>\n\n<td>\nArray containing train position information (<a href=\"#TrainPosition\">TrainPosition</a>).\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"TrainPosition\" name=\"TrainPosition\">TrainPosition Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>CarCount</td>\n\n<td>Number of cars.  Can sometimes be 0 when there is no data available.</td>\n</tr>\n\n<tr>\n<td>CircuitId</td>\n\n<td>The circuit identifier the train is currently on.  This identifier can be referenced from the <a href=\"https://developer.wmata.com/docs/services/5763fa6ff91823096cac1057/operations/57641afc031f59363c586dca\">Standard Routes</a> method.</td>\n</tr>\n\n<tr>\n<td>DestinationStationCode</td>\n\n<td>Destination station code. Can be NULL. Use this value in other rail-related APIs to retrieve data about a station.  Note that this value may <em>sometimes</em> differ from the destination station code returned by our Next Trains methods.</td>\n</tr>\n\n<tr>\n<td>DirectionNum</td>\n\n<td>The direction of movement regardless of which track the train is on.  Valid values are 1 or 2.  Generally speaking, trains with direction 1 are northbound/eastbound, while trains with direction 2 are southbound/westbound.</td>\n</tr>\n\n<tr>\n<td>LineCode</td>\n\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR, or SV). May also be NULL in certain cases.</td>\n</tr>\n\n<tr>\n<td>SecondsAtLocation</td>\n\n<td>Approximate \"dwell time\".  This is not an exact value, but can be used to determine how long a train has been reported at the same track circuit.</td>\n</tr>\n\n<tr>\n<td>ServiceType</td>\n\n<td>Service Type of a train, can be any of the following <a href=\"#SeviceType\">Service Types</a></td>\n</tr>\n\n<tr>\n<td>TrainId</td>\n\n<td>Uniquely identifiable internal train identifier.</td>\n</tr>\n\n<tr>\n<td>TrainNumber</td>\n\n<td><em>Non-unique</em> train identifier, often used by WMATA's Rail Scheduling and Operations Teams, as well as over open radio communication.</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"SeviceType\" name=\"ServiceType\">Service Types</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>NoPassengers</td>\n\n<td>This is a non-revenue train with no passengers on board.  Note that this designation of NoPassengers does not necessarily correlate with PIDS \"No Passengers\".  As of 08/22/2016, this functionality has been reinstated to include all non-revenue vehicles, with minor exceptions.</td>\n</tr>\n\n<tr>\n<td>Normal</td>\n\n<td>This is a normal revenue service train.</td>\n</tr>\n\n<tr>\n<td>Special</td>\n\n<td>This is a special revenue service train with an unspecified line and destination.  This is more prevalent during scheduled track work.</td>\n</tr>\n\n<tr>\n<td>Unknown</td>\n\n<td>This often denotes cases with unknown data or work vehicles.</td>\n</tr>\n</tbody>\n</table>",
                "operationId": "5763fb35f91823096cac1058",
                "parameters": [
                    {
                        "name": "contentType",
                        "in": "query",
                        "description": "Returns response in the specified format.  Currently supported formats include <b>json</b> and <b>xml</b>.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "type": "string",
                            "default": "json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default return code.",
                        "content": {
                            "application/json": {
                                "example": "{\n   \"TrainPositions\":[\n      {\n         \"TrainId\": \"100\",\n         \"TrainNumber\": \"301\",\n         \"CarCount\": 6,\n         \"DirectionNum\": 1,\n         \"CircuitId\": 1234,\n         \"DestinationStationCode\": \"A01\",\n         \"LineCode\": \"RD\",\n         \"SecondsAtLocation\": 0,\n         \"ServiceType\": \"Normal\"    \n      },\n      {\n         \"TrainId\": \"200\",\n         \"TrainNumber\": \"XY1\",\n         \"CarCount\": 6,\n         \"DirectionNum\": 2,\n         \"CircuitId\": 4321,\n         \"DestinationStationCode\": null,\n         \"LineCode\": null,\n         \"SecondsAtLocation\": 25\n         \"ServiceType\": \"Special\"\n      }\n   ]\n}"
                            },
                            "text/xml": {
                                "example": "<TrainPositionResp xmlns=\"http://www.wmata.com\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"> <TrainPositions> <TrainPosition> <CarCount>6</CarCount> <CircuitId>1234</CircuitId> <DestinationStationCode>A01</DestinationStationCode> <DirectionNum>1</DirectionNum> <LineCode>RD</LineCode> <SecondsAtLocation>0</SecondsAtLocation> <ServiceType>Normal</ServiceType> <TrainId>100</TrainId> <TrainNumber>301</TrainNumber> </TrainPosition> <TrainPosition> <CarCount>6</CarCount> <CircuitId>4321</CircuitId> <DestinationStationCode i:nil=\"true\"/> <DirectionNum>1</DirectionNum> <LineCode i:nil=\"true\"/> <SecondsAtLocation>25</SecondsAtLocation> <ServiceType>Special</ServiceType> <TrainId>200</TrainId> <TrainNumber>XY1</TrainNumber> </TrainPosition> </TrainPositions> </TrainPositionResp>"
                            }
                        }
                    }
                }
            }
        },
        "/StandardRoutes": {
            "get": {
                "summary": "Standard Routes",
                "description": "<h4 class=\"text-primary\">Description</h4>\n\n<p>Returns an ordered list of mostly revenue (and some lead) track circuits, arranged by line and track number.  This data does not change frequently and should be cached for a reasonable amount of time.</p>\n<p>Please refer to <a href=\"/TrainPositionsFAQ\">this page</a> for additional details.</p>\n\n<h4 class=\"text-primary\">Response Elements</h4>\n\n<table class=\"table table-condensed table-hover\">\n<thead>\n<tr>\n<th class=\"col-md-3\">Element</th>\n\n<th>Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td>StandardRoutes</td>\n\n<td>\nArray containing revenue line information (<a href=\n\"#StandardRoute\">StandardRoute</a>).\n</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"StandardRoute\" name=\n\"StandardRoute\">StandardRoute Elements</a>\n</div>\n</td>\n</tr>\n\n<tr>\n<td>LineCode</td>\n\n<td>Abbreviation for the revenue line.  </td>\n</tr>\n\n<tr>\n<td>TrackCircuits</td>\n\n<td>\nArray containing ordered track circuit information (<a href=\n\"#TrackCircuit\">TrackCircuit</a>).\n</td>\n</tr>\n\n<tr>\n<td>TrackNum</td>\n\n<td>Track number (1 or 2).</td>\n</tr>\n\n<tr>\n<td colspan=\"2\">\n<div class=\"text-primary\" style=\"margin-top: 1em\">\n<a id=\"TrackCircuit\" name=\n\"TrackCircuit\">TrackCircuit Elements</a>\n</div>\n</td>\n</tr>        \n\n<tr>\n<td>CircuitId</td>\n\n<td>An internal system-wide uniquely identifiable circuit number.</td>\n</tr>\n\n<tr>\n<td>SeqNum</td>\n\n<td>Order in which the circuit appears for the given line and track.  Sequences go from West to East and South to North.</td>\n</tr>        \n\n<tr>\n<td>StationCode</td>\n\n<td>If the circuit is at a station, this value will represent the station code.  Otherwise, it will be be NULL. Use this value in other rail-related APIs to retrieve data about a station.</td>\n</tr>\n</tbody>\n</table>",
                "operationId": "57641afc031f59363c586dca",
                "parameters": [
                    {
                        "name": "contentType",
                        "in": "query",
                        "description": "Returns response in the specified format.  Currently supported formats include <b>json</b> and <b>xml</b>.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "type": "string",
                            "default": "json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": null
                    }
                }
            }
        },
        "/TrackCircuits": {
            "get": {
                "summary": "Track Circuits",
                "description": "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a list of all track circuits including those on pocket tracks and crossovers.  Each track circuit may include references to its right and left neighbors.</p>\r\n<p>Please refer to <a href=\"/TrainPositionsFAQ\">this page</a> for additional details.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>TrackCircuits</td>\r\n\r\n<td>\r\nArray containing track circuit information (<a href=\r\n\"#TrackCircuit\">TrackCircuit</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"TrackCircuit\" name=\r\n\"TrackCircuit\">TrackCircuit Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>CircuitId</td>\r\n\r\n<td>An internal system-wide uniquely identifiable circuit number.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Neighbors</td>\r\n\r\n<td>\r\nArray containing track circuit neighbor information (<a href=\"#TrackCircuitNeighbor\">TrackCircuitNeighbor</a>).  Note that some track circuits have no neighbors in one direction.  All track circuits have at least one neighbor.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Track</td>\r\n\r\n<td>Track number.  1 and 2 denote \"main\" lines, while 0 and 3 are connectors (between different types of tracks) and pocket tracks, respectively.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"TrackCircuitNeighbor\" name=\"TrackCircuitNeighbor\">TrackCircuitNeighbor Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>CircuitIds</td>\r\n\r\n<td>\r\nArray containing neighboring circuit ids.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>NeighborType</td>\r\n\r\n<td>Left or Right neighbor group.  Generally speaking, left neighbors are to the west and south, while right neighbors are to the east/north.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<h4 class=\"text-primary\">Neighbor Notes</h4>\r\n\r\n<p>Given the hypothetical example below, note that CircuitId 8 has <i>two</i> right neighbors - 4 and 3.  Similarly, CircuitId 6 has <i>two</i> left neighbors - 5 and 7.</p>\r\n\r\n<svg width=\"480\" height=\"220\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<!-- Created with Method Draw - http://github.com/duopixel/Method-Draw/ -->\r\n\r\n<g>\r\n<title>background</title>\r\n<rect x=\"-1\" y=\"-1\" width=\"482\" height=\"222\" id=\"canvas_background\" fill=\"#fff\"/>\r\n</g>\r\n<g>\r\n<title>Layer 1</title>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"12\" y=\"24\" id=\"svg_1\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">Track 2</text>\r\n<rect fill=\"#fff\" stroke=\"#000\" stroke-width=\"1.5\" x=\"74\" y=\"6\" width=\"121\" height=\"25\" id=\"svg_2\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"129.43243\" y=\"22\" id=\"svg_3\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">8</text>\r\n<rect fill=\"#fff\" stroke=\"#000\" stroke-width=\"1.5\" x=\"203.09686\" y=\"6\" width=\"121\" height=\"25\" id=\"svg_5\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"261.55862\" y=\"22\" id=\"svg_6\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">4</text>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"12\" y=\"205.04419\" id=\"svg_7\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">Track 1</text>\r\n<rect fill=\"#fff\" stroke=\"#000\" stroke-width=\"1.5\" x=\"74\" y=\"187.04419\" width=\"121\" height=\"25\" id=\"svg_8\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"107\" y=\"203.04419\" id=\"svg_9\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">CircuitId 1</text>\r\n<rect fill=\"#fff\" stroke=\"#000\" stroke-width=\"1.5\" x=\"203.09686\" y=\"187.04419\" width=\"121\" height=\"25\" id=\"svg_10\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"260.77257\" y=\"203.04419\" id=\"svg_11\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">2</text>\r\n<rect fill=\"#fff\" stroke=\"#000\" stroke-width=\"1.5\" x=\"332.13174\" y=\"6\" width=\"121\" height=\"25\" id=\"svg_12\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"365.13174\" y=\"22\" id=\"svg_13\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">CircuitId 4</text>\r\n<rect fill=\"#fff\" stroke=\"#000\" stroke-width=\"1.5\" x=\"332.13174\" y=\"6\" width=\"121\" height=\"25\" id=\"svg_14\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"390.61514\" y=\"22\" id=\"svg_15\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">9</text>\r\n<rect fill=\"#fff\" stroke=\"#000\" stroke-width=\"1.5\" x=\"332.13175\" y=\"187.06905\" width=\"63.72717\" height=\"25\" id=\"svg_16\"/>\r\n<rect fill=\"#DDDDDD\" stroke=\"#000\" stroke-width=\"1.5\" x=\"239.33356\" y=\"94.66679\" width=\"121\" height=\"25\" id=\"svg_24\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"285.70017\" y=\"110.66679\" id=\"svg_25\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">100</text>\r\n<rect fill=\"#BBBBBB\" stroke=\"#000\" stroke-width=\"1.5\" x=\"179.89389\" y=\"56.66673\" width=\"62.54576\" height=\"25\" id=\"svg_26\" transform=\"rotate(45, 211.167, 69.1667)\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"207.40015\" y=\"72.26674\" id=\"svg_27\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">3</text>\r\n<rect fill=\"#BBBBBB\" stroke=\"#000\" stroke-width=\"1.5\" x=\"355.89414\" y=\"132.66684\" width=\"62.54576\" height=\"25\" id=\"svg_28\" transform=\"rotate(45, 387.167, 145.167)\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"228.00029\" y=\"62.66672\" id=\"svg_29\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">Track 0</text>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"401.33387\" y=\"136.00016\" id=\"svg_30\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">Track 0</text>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"279.33371\" y=\"86.00009\" id=\"svg_31\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">Track 3</text>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"384.59929\" y=\"147.86637\" id=\"svg_32\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">7</text>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"361.98669\" y=\"203.04419\" id=\"svg_33\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">5</text>\r\n<rect fill=\"#fff\" stroke=\"#000\" stroke-width=\"1.5\" x=\"409.75622\" y=\"187.06905\" width=\"63.72717\" height=\"25\" id=\"svg_34\"/>\r\n<text fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"439.61116\" y=\"203.65025\" id=\"svg_35\" font-size=\"12\" font-family=\"'Trebuchet MS', Gadget, sans-serif\" text-anchor=\"start\" xml:space=\"preserve\">6</text>\r\n</g>\r\n</svg>\r\n\r\n<p>The JSON representation of the image above would be as follows:</p>\r\n\r\n<pre>\r\n{\r\n\"TrackCircuits\": [{\r\n\"Track\": 2,\r\n\"CircuitId\": 8,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Right\",\r\n\"CircuitIds\": [4, 3]\r\n}]\r\n}, {\r\n\"Track\": 2,\r\n\"CircuitId\": 4,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Left\",\r\n\"CircuitIds\": [8]\r\n}, {\r\n\"NeighborType\": \"Right\",\r\n\"CircuitIds\": [9]\r\n}]\r\n}, {\r\n\"Track\": 2,\r\n\"CircuitId\": 9,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Left\",\r\n\"CircuitIds\": [4]\r\n}]\r\n}, {\r\n\"Track\": 0,\r\n\"CircuitId\": 3,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Left\",\r\n\"CircuitIds\": [8]\r\n}, {\r\n\"NeighborType\": \"Right\",\r\n\"CircuitIds\": [100]\r\n}]\r\n}, {\r\n\"Track\": 3,\r\n\"CircuitId\": 100,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Left\",\r\n\"CircuitIds\": [3]\r\n}, {\r\n\"NeighborType\": \"Right\",\r\n\"CircuitIds\": [7]\r\n}]\r\n}, {\r\n\"Track\": 0,\r\n\"CircuitId\": 7,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Left\",\r\n\"CircuitIds\": [100]\r\n}, {\r\n\"NeighborType\": \"Right\",\r\n\"CircuitIds\": [6]\r\n}]\r\n}, {\r\n\"Track\": 1,\r\n\"CircuitId\": 1,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Right\",\r\n\"CircuitIds\": [2]\r\n}]\r\n}, {\r\n\"Track\": 1,\r\n\"CircuitId\": 2,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Left\",\r\n\"CircuitIds\": [1]\r\n}, {\r\n\"NeighborType\": \"Right\",\r\n\"CircuitIds\": [5]\r\n}]\r\n}, {\r\n\"Track\": 1,\r\n\"CircuitId\": 5,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Left\",\r\n\"CircuitIds\": [2]\r\n}, {\r\n\"NeighborType\": \"Right\",\r\n\"CircuitIds\": [6]\r\n}]\r\n}, {\r\n\"Track\": 1,\r\n\"CircuitId\": 6,\r\n\"Neighbors\": [{\r\n\"NeighborType\": \"Left\",\r\n\"CircuitIds\": [5, 7]\r\n}]\r\n}]\r\n}\r\n</pre>\r\n",
                "operationId": "57644238031f59363c586dcb",
                "parameters": [
                    {
                        "name": "contentType",
                        "in": "query",
                        "description": "Returns response in the specified format.  Currently supported formats include <b>json</b> and <b>xml</b>.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "json",
                                "xml"
                            ],
                            "type": "string",
                            "default": "json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": null
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "api_key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}